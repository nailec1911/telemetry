#!/usr/bin/env python3
import argparse
from sys import stderr
from telemetry_values.telemetry_values import Serie, TelemetryValues
from serie_parser.serie_parser import Parser
from gui.gui import TelemetryGUI
from PyQt6.QtWidgets import QApplication
import pyqtgraph as pg


def display_plots(telemetry_values: TelemetryValues):
    app = QApplication([])
    viewer = TelemetryGUI(telemetry_values)
    viewer.show()
    app.exec()
    return


def parse_arguments():
    parser = argparse.ArgumentParser(
        prog="telemetry_viewer",
        description="A visualizer for telemetry files.",
    )
    # parser.add_argument(
        # "FILE",
        # metavar="FILE",
        # type=str,
        # help="File to analyze.",
    # )
    parser.add_argument(
        "FILE",
        metavar="FILE",
        type=str,
        nargs="?",
        default=None,
        help="File to analyze (optional).",
    )
    args = parser.parse_args()

    return args


def main_viewer(file: str) -> int:
    try:
        if file:
            parsed = Parser(file)
            loaded_values: TelemetryValues = parsed.get_datas()
            print(f"Telemetry infos from file '{file}' properly loaded.")
            loaded_values.display()
        else:
            loaded_values = TelemetryValues("", 0)
        display_plots(loaded_values)

    except Exception as err:
        print(str(err))
        raise FileNotFoundError(
            f"Failed to load values from file '{file}'") from err
    return 0


if __name__ == "__main__":
    try:
        arg = parse_arguments()
        main_viewer(arg.FILE)
    except Exception as e:
        print(e, file=stderr)
        exit(1)
